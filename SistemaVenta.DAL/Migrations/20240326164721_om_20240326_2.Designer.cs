// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SistemaVenta.DAL.DBContext;

#nullable disable

namespace nextadvisordotnet.DAL.Migrations
{
    [DbContext(typeof(DbventaContext))]
    [Migration("20240326164721_om_20240326_2")]
    partial class om_20240326_2
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SistemaVenta.AplicacionWeb.Models.DTOs.DetailBook", b =>
                {
                    b.Property<int>("IdDetailBook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetailBook");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetailBook"));

                    b.Property<int>("IdBook")
                        .HasColumnType("int")
                        .HasColumnName("idBook");

                    b.Property<int?>("IdCategoriaNavigationIdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdGuest")
                        .HasColumnType("int")
                        .HasColumnName("idGuest");

                    b.Property<int>("IdRoom")
                        .HasColumnType("int")
                        .HasColumnName("idRoom");

                    b.Property<decimal?>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdDetailBook")
                        .HasName("PK__DetalleB__BFE2843FB3D3EFB5");

                    b.HasIndex("IdBook");

                    b.HasIndex("IdCategoriaNavigationIdCategoria");

                    b.HasIndex("IdGuest");

                    b.HasIndex("IdRoom");

                    b.ToTable("DetailBook");
                });

            modelBuilder.Entity("SistemaVenta.Entity.AreaFisica", b =>
                {
                    b.Property<int>("IdAreaFisica")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAreaFisica"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("descripcion");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("IdEstablishment")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreImpresora")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombreImpresora");

                    b.HasKey("IdAreaFisica")
                        .HasName("PK__AreaFisica__077D56148B22AC5G");

                    b.HasIndex("IdEstablishment");

                    b.ToTable("AreaFisica");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Book", b =>
                {
                    b.Property<int>("IdBook")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idBook");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdBook"));

                    b.Property<string>("Adults")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AgeChildren")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CheckIn")
                        .HasColumnType("datetime")
                        .HasColumnName("checkIn");

                    b.Property<DateTime>("CheckOut")
                        .HasColumnType("datetime")
                        .HasColumnName("checkOut");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdBookStatus")
                        .HasColumnType("int")
                        .HasColumnName("idBookStatus");

                    b.Property<int>("IdEstablishment")
                        .HasColumnType("int")
                        .HasColumnName("idEstablishment");

                    b.Property<int?>("IdMovimiento")
                        .HasColumnType("int")
                        .HasColumnName("idMovimiento");

                    b.Property<string>("IdOrigin")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("IdOriginNavigationIdOrigin")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("reason");

                    b.HasKey("IdBook")
                        .HasName("PK__Book__077D56148B22AC5G");

                    b.HasIndex("IdBookStatus");

                    b.HasIndex("IdMovimiento");

                    b.HasIndex("IdOriginNavigationIdOrigin");

                    b.ToTable("Books");
                });

            modelBuilder.Entity("SistemaVenta.Entity.BookStatus", b =>
                {
                    b.Property<int>("IdBookStatus")
                        .HasColumnType("int")
                        .HasColumnName("idBookStatus");

                    b.Property<string>("Background")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modificationDate");

                    b.Property<string>("StatusName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("StatusName");

                    b.HasKey("IdBookStatus")
                        .HasName("PK__BookStat__A9D59AEE8BEB6B2E");

                    b.ToTable("BookStatus");
                });

            modelBuilder.Entity("SistemaVenta.Entity.BookingDetailResult", b =>
                {
                    b.Property<string>("BookNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckIn")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CheckOut")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EstablishmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestDocument")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GuestName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoomNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SubTotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalBook")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalTax")
                        .HasColumnType("decimal(18,2)");

                    b.ToTable("BookingDetailResult");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Caja", b =>
                {
                    b.Property<int>("IdCaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCaja");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCaja"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("FechaCierre")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaCierre");

                    b.Property<DateTime>("FechaInicio")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaInicio");

                    b.Property<int?>("IdAreaFisica")
                        .HasColumnType("int");

                    b.Property<int>("IdEstablishment")
                        .HasColumnType("int");

                    b.Property<int>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("observacion");

                    b.Property<decimal>("SaldoFinal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("saldoFinal");

                    b.Property<decimal>("SaldoInicial")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("saldoInicial");

                    b.Property<decimal?>("SaldoReal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("saldoReal");

                    b.HasKey("IdCaja")
                        .HasName("PK__Caja__077D56148B22AC5G");

                    b.HasIndex("IdAreaFisica");

                    b.HasIndex("IdEstablishment");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Caja");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Categoria", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("NombreCategoria")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombreCategoria");

                    b.HasKey("IdCategoria")
                        .HasName("PK__Categori__8A3D240C512DD09F");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("SistemaVenta.Entity.CategoriaProducto", b =>
                {
                    b.Property<int>("IdCategoriaProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idCategoriaProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCategoriaProducto"));

                    b.Property<string>("Descripcion")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEstablishment")
                        .HasColumnType("int");

                    b.Property<string>("NombreCategoriaProducto")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("nombreCategoriaProducto");

                    b.HasKey("IdCategoriaProducto")
                        .HasName("PK__CateProd__8A3D240C512DD09F");

                    b.HasIndex("IdEstablishment");

                    b.ToTable("CategoriaProducto");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Configuracion", b =>
                {
                    b.Property<string>("Propiedad")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("propiedad");

                    b.Property<string>("Recurso")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("recurso");

                    b.Property<string>("Valor")
                        .HasMaxLength(60)
                        .IsUnicode(false)
                        .HasColumnType("varchar(60)")
                        .HasColumnName("valor");

                    b.ToTable("Configuracion", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.DetailRoom", b =>
                {
                    b.Property<int>("IdDetailRoom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetailRoom"));

                    b.Property<int>("IdRoom")
                        .HasColumnType("int");

                    b.Property<int>("IdRoomStatus")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Observation")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("observation");

                    b.HasKey("IdDetailRoom")
                        .HasName("PK__DetailRoom");

                    b.HasIndex("IdRoom");

                    b.HasIndex("IdRoomStatus");

                    b.HasIndex("IdUsuario");

                    b.ToTable("DetailRoom");
                });

            modelBuilder.Entity("SistemaVenta.Entity.DetalleCaja", b =>
                {
                    b.Property<int>("IdDetalleCaja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleCaja"));

                    b.Property<int>("IdCaja")
                        .HasColumnType("int");

                    b.Property<int>("IdMedioPago")
                        .HasColumnType("int");

                    b.Property<int?>("IdMovimiento")
                        .HasColumnType("int");

                    b.Property<string>("Observacion")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("observacion");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("valor");

                    b.HasKey("IdDetalleCaja")
                        .HasName("PK__DetalleCaja__077D56148B22AC5G");

                    b.HasIndex("IdCaja");

                    b.HasIndex("IdMedioPago");

                    b.HasIndex("IdMovimiento");

                    b.ToTable("DetalleCaja");
                });

            modelBuilder.Entity("SistemaVenta.Entity.DetalleMovimiento", b =>
                {
                    b.Property<int>("IdDetalleMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idDetalleMovimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdDetalleMovimiento"));

                    b.Property<int?>("Cantidad")
                        .HasColumnType("int")
                        .HasColumnName("cantidad");

                    b.Property<string>("DescripcionProducto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcionProducto");

                    b.Property<int?>("IdMovimiento")
                        .HasColumnType("int")
                        .HasColumnName("idMovimiento");

                    b.Property<int>("IdProducto")
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("total");

                    b.HasKey("IdDetalleMovimiento")
                        .HasName("PK__DetalleV__BFE2843FB3D3EFB5");

                    b.HasIndex("IdMovimiento");

                    b.HasIndex("IdProducto");

                    b.ToTable("DetalleMovimiento");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Establishment", b =>
                {
                    b.Property<int>("IdEstablishment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEstablishment");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEstablishment"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("address");

                    b.Property<DateTime?>("CheckInTime")
                        .HasColumnType("datetime")
                        .HasColumnName("checkInTime");

                    b.Property<DateTime?>("CheckOutTime")
                        .HasColumnType("datetime")
                        .HasColumnName("checkOutTime");

                    b.Property<string>("City")
                        .HasMaxLength(80)
                        .IsUnicode(false)
                        .HasColumnType("varchar(80)")
                        .HasColumnName("city");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("contact");

                    b.Property<string>("Country")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("country");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(2147483647)
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("EstablishmentName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("establishmentName");

                    b.Property<string>("EstablishmentType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("establishmentType");

                    b.Property<string>("Geolocation")
                        .HasMaxLength(700)
                        .IsUnicode(false)
                        .HasColumnType("varchar(700)")
                        .HasColumnName("geolocation");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("NIT")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nIT");

                    b.Property<string>("NameImage")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("nameImage");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("Province")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("province");

                    b.Property<string>("Rnt")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("rnt");

                    b.Property<string>("Tax")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("token");

                    b.Property<string>("UrlImage")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("urlImage");

                    b.HasKey("IdEstablishment")
                        .HasName("PK__Establi__8A3D240C512DD09F");

                    b.ToTable("Establishment", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.GeneralParams", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Item1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Item3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("GeneralParams");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Guest", b =>
                {
                    b.Property<int>("IdGuest")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idGuest");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdGuest"));

                    b.Property<int?>("Age")
                        .HasColumnType("int")
                        .HasColumnName("age");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Document")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("document");

                    b.Property<string>("DocumentType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("documentType");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<int>("IdEstablishment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEstablishment")
                        .HasDefaultValueSql("1");

                    b.Property<int?>("IdMainGuest")
                        .HasColumnType("int")
                        .HasColumnName("idMainGuest");

                    b.Property<bool?>("IsChild")
                        .HasColumnType("bit")
                        .HasColumnName("isChild");

                    b.Property<bool>("IsMain")
                        .HasColumnType("bit")
                        .HasColumnName("isMain");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lastName");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("nationality");

                    b.Property<int>("NumberCompanions")
                        .HasColumnType("int")
                        .HasColumnName("numberCompanions");

                    b.Property<string>("OriginCity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("originCity");

                    b.Property<string>("OriginCountry")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("originCountry");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("phoneNumber");

                    b.Property<string>("RecidenceCity")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("recidenceCity");

                    b.Property<string>("Treatment")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("treatment");

                    b.HasKey("IdGuest")
                        .HasName("PK_Guest");

                    b.HasIndex("IdEstablishment");

                    b.ToTable("Guest", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.Holiday", b =>
                {
                    b.Property<int>("IdHoliday")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idHoliday");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdHoliday"));

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("DayOfTheWeek")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("dayOfTheWeek");

                    b.Property<int>("IdEstablishment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEstablishment")
                        .HasDefaultValueSql("1");

                    b.Property<decimal>("Increment")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("increment");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user");

                    b.HasKey("IdHoliday")
                        .HasName("PK__Holi__B84A03C11B1726B5");

                    b.HasIndex("IdEstablishment");

                    b.ToTable("Holiday", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.ImagesEstablishment", b =>
                {
                    b.Property<int>("IdImagesEstablishment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdImagesEstablishment");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImagesEstablishment"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEstablishment")
                        .HasColumnType("int");

                    b.Property<int>("ImageNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modificationDate");

                    b.Property<string>("NameImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("urlImage");

                    b.HasKey("IdImagesEstablishment")
                        .HasName("PK__ImagesEstablishments__A9D59AEE8BEB6B2E");

                    b.HasIndex("IdEstablishment");

                    b.ToTable("ImagesEstablishments");
                });

            modelBuilder.Entity("SistemaVenta.Entity.ImagesRoom", b =>
                {
                    b.Property<int>("IdImagesRoom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdImagesRoom");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdImagesRoom"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdRoom")
                        .HasColumnType("int");

                    b.Property<int>("ImageNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modificationDate");

                    b.Property<string>("NameImage")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrlImage")
                        .IsRequired()
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("urlImage");

                    b.HasKey("IdImagesRoom")
                        .HasName("PK__ImagesRoom__A9D59AEE8BEB6B2E");

                    b.HasIndex("IdRoom");

                    b.ToTable("ImagesRoom");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Level", b =>
                {
                    b.Property<int>("IdLevel")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLevel"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEstablishment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEstablishment")
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("LevelName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("levelName");

                    b.Property<int>("LevelNumber")
                        .HasColumnType("int")
                        .HasColumnName("levelNumber");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.HasKey("IdLevel")
                        .HasName("PK__Level__8A3D240C512DD09F");

                    b.HasIndex("IdEstablishment");

                    b.ToTable("Level");
                });

            modelBuilder.Entity("SistemaVenta.Entity.MedioPago", b =>
                {
                    b.Property<int>("IdMedioPago")
                        .HasColumnType("int")
                        .HasColumnName("idMedioPago");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Naturaleza")
                        .IsRequired()
                        .HasMaxLength(2)
                        .IsUnicode(false)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("naturaleza");

                    b.Property<string>("UrlImagen")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("urlImagen");

                    b.HasKey("IdMedioPago")
                        .HasName("PK__MedioPago__077D56148B22AC5G");

                    b.ToTable("MedioPago");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Menu", b =>
                {
                    b.Property<int>("IdMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMenu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMenu"));

                    b.Property<string>("Controlador")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("controlador");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Icono")
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("icono");

                    b.Property<int?>("IdMenuPadre")
                        .HasColumnType("int")
                        .HasColumnName("idMenuPadre");

                    b.Property<string>("PaginaAccion")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("paginaAccion");

                    b.HasKey("IdMenu")
                        .HasName("PK__Menu__C26AF483A6068BB7");

                    b.HasIndex("IdMenuPadre");

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.Movimiento", b =>
                {
                    b.Property<int>("IdMovimiento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idMovimiento");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdMovimiento"));

                    b.Property<string>("DocumentoCliente")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("documentoCliente");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEstablishment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEstablishment")
                        .HasDefaultValueSql("1");

                    b.Property<int?>("IdMovimientoRel")
                        .HasColumnType("int")
                        .HasColumnName("idMovimientoRel");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int");

                    b.Property<int?>("IdTipoDocumentoMovimiento")
                        .HasColumnType("int")
                        .HasColumnName("idTipoDocumentoMovimiento");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    b.Property<decimal?>("ImpuestoTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("impuestoTotal");

                    b.Property<string>("NombreCliente")
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("nombreCliente");

                    b.Property<string>("NumeroDocumentoExterno")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumeroMovimiento")
                        .HasMaxLength(6)
                        .IsUnicode(false)
                        .HasColumnType("varchar(6)")
                        .HasColumnName("numeroMovimiento");

                    b.Property<decimal?>("SubTotal")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("subTotal");

                    b.Property<decimal?>("Total")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("TotalRoom")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdMovimiento")
                        .HasName("PK__Movimiento__077D56148B22AC5G");

                    b.HasIndex("IdEstablishment");

                    b.HasIndex("IdProveedor");

                    b.HasIndex("IdTipoDocumentoMovimiento");

                    b.HasIndex("IdUsuario");

                    b.ToTable("Movimiento");
                });

            modelBuilder.Entity("SistemaVenta.Entity.NumeroCorrelativo", b =>
                {
                    b.Property<int>("IdNumeroCorrelativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idNumeroCorrelativo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdNumeroCorrelativo"));

                    b.Property<int?>("CantidadDigitos")
                        .HasColumnType("int")
                        .HasColumnName("cantidadDigitos");

                    b.Property<DateTime?>("FechaActualizacion")
                        .HasColumnType("datetime")
                        .HasColumnName("fechaActualizacion");

                    b.Property<string>("Gestion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("gestion");

                    b.Property<int>("IdEstablishment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEstablishment")
                        .HasDefaultValueSql("1");

                    b.Property<int?>("UltimoNumero")
                        .HasColumnType("int")
                        .HasColumnName("ultimoNumero");

                    b.HasKey("IdNumeroCorrelativo")
                        .HasName("PK__NumeroCo__25FB547E65A40777");

                    b.HasIndex("IdEstablishment");

                    b.ToTable("NumeroCorrelativo", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.Origin", b =>
                {
                    b.Property<int>("IdOrigin")
                        .HasColumnType("int")
                        .HasColumnName("IdOrigin");

                    b.Property<string>("BackgroundColor")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .HasColumnName("backgroundColor");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("EventTitle")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("eventTitle");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isActive")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modificationDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.HasKey("IdOrigin")
                        .HasName("PK__Origin__A9D59AEE8BEB6B2E");

                    b.ToTable("Origins");
                });

            modelBuilder.Entity("SistemaVenta.Entity.ParamPlan", b =>
                {
                    b.Property<int>("IdParamPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdParamPlan"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdPlan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdParamPlan");

                    b.HasIndex("IdPlan");

                    b.ToTable("ParamPlans");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Plan", b =>
                {
                    b.Property<int>("IdPlan")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPlan"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlanDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPlan");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Producto", b =>
                {
                    b.Property<int>("IdProducto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProducto");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProducto"));

                    b.Property<string>("CodigoBarra")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("codigoBarra");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdCategoriaProducto")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.Property<int>("IdEstablishment")
                        .HasColumnType("int");

                    b.Property<int?>("IdProveedor")
                        .HasColumnType("int")
                        .HasColumnName("idProveedor");

                    b.Property<decimal?>("Imp")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Marca")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("marca");

                    b.Property<string>("NombreImagen")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreImagen");

                    b.Property<decimal?>("Precio")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("precio");

                    b.Property<decimal?>("PrecioCompra")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int")
                        .HasColumnName("stock");

                    b.Property<string>("UrlImagen")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("urlImagen");

                    b.HasKey("IdProducto")
                        .HasName("PK__Producto__07F4A132797CBE6F");

                    b.HasIndex("IdCategoriaProducto");

                    b.HasIndex("IdEstablishment");

                    b.HasIndex("IdProveedor");

                    b.ToTable("Producto", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.Proveedor", b =>
                {
                    b.Property<int>("IdProveedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idProveedor");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProveedor"));

                    b.Property<string>("Contacto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("correo");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEstablishment")
                        .HasColumnType("int");

                    b.Property<string>("NIT")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("Telefono")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telefono");

                    b.HasKey("IdProveedor")
                        .HasName("PK__Proveedor__645723A6ACC301A0");

                    b.HasIndex("IdEstablishment");

                    b.ToTable("Proveedor", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.HasKey("IdRol")
                        .HasName("PK__Rol__3C872F7648303C61");

                    b.ToTable("Rol", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.RolMenu", b =>
                {
                    b.Property<int>("IdRolMenu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRolMenu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRolMenu"));

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdMenu")
                        .HasColumnType("int")
                        .HasColumnName("idMenu");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.HasKey("IdRolMenu")
                        .HasName("PK__RolMenu__CD2045D88E5957FC");

                    b.HasIndex("IdMenu");

                    b.HasIndex("IdRol");

                    b.ToTable("RolMenu", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.Room", b =>
                {
                    b.Property<int>("IdRoom")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRoom");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRoom"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int")
                        .HasColumnName("capacity");

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(800)
                        .IsUnicode(false)
                        .HasColumnType("varchar(800)")
                        .HasColumnName("description");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int")
                        .HasColumnName("idCategoria");

                    b.Property<int>("IdEstablishment")
                        .HasColumnType("int");

                    b.Property<int>("IdLevel")
                        .HasColumnType("int")
                        .HasColumnName("idLevel");

                    b.Property<int?>("IdRoomStatus")
                        .HasColumnType("int")
                        .HasColumnName("idRoomStatus");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isActive")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Number")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("number");

                    b.Property<string>("RoomTitle")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("roomTitle");

                    b.Property<int?>("SizeRoom")
                        .HasColumnType("int")
                        .HasColumnName("sizeRoom");

                    b.HasKey("IdRoom")
                        .HasName("PK__Room__07F4A132797CBE6F");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdEstablishment");

                    b.HasIndex("IdLevel");

                    b.HasIndex("IdRoomStatus");

                    b.ToTable("Room", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.RoomMapOrigin", b =>
                {
                    b.Property<int>("IdRoomMap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRoomMap");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRoomMap"));

                    b.Property<string>("ChannelName")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("channelName");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEstablishment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEstablishment")
                        .HasDefaultValueSql("1");

                    b.Property<string>("IdEstablishmentOrigin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("idEstablishmentOrigin");

                    b.Property<int?>("IdOrigin")
                        .HasColumnType("int");

                    b.Property<int?>("IdRoom")
                        .HasColumnType("int")
                        .HasColumnName("idRoom");

                    b.Property<string>("IdRoomOrigin")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("idRoomOrigin");

                    b.Property<bool?>("IsActive")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.Property<string>("UrlCalendar")
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)")
                        .HasColumnName("urlCalendar");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user");

                    b.HasKey("IdRoomMap")
                        .HasName("PK__IdRoomMap__A9D59AEE8BEB6B2E");

                    b.HasIndex("IdEstablishment");

                    b.HasIndex("IdOrigin");

                    b.HasIndex("IdRoom");

                    b.ToTable("RoomMapOrigin");
                });

            modelBuilder.Entity("SistemaVenta.Entity.RoomPrice", b =>
                {
                    b.Property<int>("IdRoomPrice")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idRoomPrice");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRoomPrice"));

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<decimal>("Friday")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("friday");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<int>("IdEstablishment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEstablishment")
                        .HasDefaultValueSql("1");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isActive")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Monday")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("monday");

                    b.Property<decimal>("Saturday")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("saturday");

                    b.Property<decimal>("Sunday")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("sunday");

                    b.Property<decimal>("Thursday")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("thursday");

                    b.Property<decimal>("Tuesday")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("tuesday");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("user");

                    b.Property<decimal>("Wednesday")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("wednesday");

                    b.HasKey("IdRoomPrice")
                        .HasName("PK__RoomPri__8A3D240C512DD09F");

                    b.HasIndex("IdCategoria");

                    b.HasIndex("IdEstablishment");

                    b.ToTable("RoomPrice", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.RoomStatus", b =>
                {
                    b.Property<int>("IdRoomStatus")
                        .HasColumnType("int")
                        .HasColumnName("idRoomStatus");

                    b.Property<string>("Background")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("background");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("title");

                    b.Property<string>("TitleEn")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("titleEn");

                    b.Property<string>("TitlePor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("titlePor");

                    b.HasKey("IdRoomStatus")
                        .HasName("PK__RoomStat__A9D59AEE8BEB6B2E");

                    b.ToTable("RoomStatus");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Season", b =>
                {
                    b.Property<int>("IdSeason")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idSeason");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSeason"));

                    b.Property<int?>("CategoriaIdCategoria")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime>("Date")
                        .HasColumnType("date")
                        .HasColumnName("date");

                    b.Property<string>("DayOfTheWeek")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("dayOfTheWeek");

                    b.Property<int>("IdEstablishment")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idEstablishment")
                        .HasDefaultValueSql("1");

                    b.Property<decimal>("Increment")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("increment");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isActive")
                        .HasDefaultValueSql("1");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("User")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSeason")
                        .HasName("PK__SeasonPri__8A3D240C512DD09F");

                    b.HasIndex("CategoriaIdCategoria");

                    b.HasIndex("IdEstablishment");

                    b.ToTable("Season", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.Entity.Service", b =>
                {
                    b.Property<int>("IdService")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdService");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdService"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("IdEstablishment")
                        .HasColumnType("int");

                    b.Property<int?>("IdRoom")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAdditionalValue")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("isAdditionalValue")
                        .HasDefaultValueSql("1");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime")
                        .HasColumnName("modificationDate");

                    b.Property<string>("ServiceConditions")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("serviceConditions");

                    b.Property<string>("ServiceImageName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ServiceInfo")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("serviceInfo");

                    b.Property<string>("ServiceInfoQuantity")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("serviceInfoQuantity");

                    b.Property<bool?>("ServiceIsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasColumnName("serviceIsActive")
                        .HasDefaultValueSql("1");

                    b.Property<int?>("ServiceMaximumAmount")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("int")
                        .HasColumnName("serviceMaximumAmount");

                    b.Property<string>("ServiceName")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("varchar(150)")
                        .HasColumnName("serviceName");

                    b.Property<decimal?>("ServicePrice")
                        .HasColumnType("decimal(10, 2)")
                        .HasColumnName("servicePrice");

                    b.Property<string>("ServiceUrlImage")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("serviceUrlImage");

                    b.HasKey("IdService")
                        .HasName("PK__Service__A9D59AEE8BEB6B2E");

                    b.HasIndex("IdEstablishment");

                    b.HasIndex("IdRoom");

                    b.ToTable("Service");
                });

            modelBuilder.Entity("SistemaVenta.Entity.ServiceInfo", b =>
                {
                    b.Property<int>("IdServiceInfo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdServiceInfo");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServiceInfo"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcion");

                    b.Property<string>("Icon")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("icon");

                    b.Property<bool?>("IsActive")
                        .HasMaxLength(150)
                        .IsUnicode(false)
                        .HasColumnType("bit")
                        .HasColumnName("isActive");

                    b.HasKey("IdServiceInfo")
                        .HasName("PK__ServiceInfo__A9D59AEE8BEB6B2E");

                    b.ToTable("ServiceInfo");
                });

            modelBuilder.Entity("SistemaVenta.Entity.ServiceInfoEstablishment", b =>
                {
                    b.Property<int>("IdServiceInfoEstab")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("IdServiceEst");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdServiceInfoEstab"));

                    b.Property<DateTime>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("creationDate")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DescripcionOpc")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("descripcionOpc");

                    b.Property<int>("IdEstablishment")
                        .HasColumnType("int");

                    b.Property<int?>("IdServiceInfo")
                        .HasColumnType("int");

                    b.HasKey("IdServiceInfoEstab")
                        .HasName("PK__ServiceEstablishment__A9D59AEE8BEB6B2E");

                    b.HasIndex("IdEstablishment");

                    b.HasIndex("IdServiceInfo");

                    b.ToTable("ServiceInfoEstablishment");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Subscription", b =>
                {
                    b.Property<int>("IdSubscription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdSubscription"));

                    b.Property<DateTime>("DateIni")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ExpiryDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdEstablishment")
                        .HasColumnType("int");

                    b.Property<int>("IdPlan")
                        .HasColumnType("int");

                    b.Property<int?>("IdUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PaymentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PaymentMethod")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PaymentReceipt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SubscriptionStatus")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdSubscription");

                    b.HasIndex("IdEstablishment");

                    b.HasIndex("IdPlan");

                    b.ToTable("Subscriptions");
                });

            modelBuilder.Entity("SistemaVenta.Entity.TipoDocumentoMovimiento", b =>
                {
                    b.Property<int>("IdTipoDocumentoMovimiento")
                        .HasColumnType("int")
                        .HasColumnName("idTipoDocumentoMovimiento");

                    b.Property<string>("Descripcion")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("descripcion");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Naturaleza")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdTipoDocumentoMovimiento")
                        .HasName("PK__TipoDocu__A9D59AEE8BEB6B2E");

                    b.ToTable("TipoDocumentoMovimiento");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Usuario", b =>
                {
                    b.Property<int>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("idUsuario");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUsuario"));

                    b.Property<string>("Clave")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("clave");

                    b.Property<string>("Correo")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("correo");

                    b.Property<bool?>("EsActivo")
                        .HasColumnType("bit")
                        .HasColumnName("esActivo");

                    b.Property<DateTime?>("FechaRegistro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasColumnName("fechaRegistro")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int>("IdEstablishment")
                        .HasColumnType("int");

                    b.Property<int?>("IdRol")
                        .HasColumnType("int")
                        .HasColumnName("idRol");

                    b.Property<string>("Nombre")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("nombre");

                    b.Property<string>("NombreFoto")
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("nombreFoto");

                    b.Property<string>("Telefono")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("telefono");

                    b.Property<string>("UrlFoto")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)")
                        .HasColumnName("urlFoto");

                    b.HasKey("IdUsuario")
                        .HasName("PK__Usuario__645723A6ACC301A0");

                    b.HasIndex("IdEstablishment");

                    b.HasIndex("IdRol");

                    b.ToTable("Usuario", (string)null);
                });

            modelBuilder.Entity("SistemaVenta.AplicacionWeb.Models.DTOs.DetailBook", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Book", "IdBookNavigation")
                        .WithMany("DetailBook")
                        .HasForeignKey("IdBook")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__DetailBo__idBoo");

                    b.HasOne("SistemaVenta.Entity.Categoria", "IdCategoriaNavigation")
                        .WithMany("DetailBook")
                        .HasForeignKey("IdCategoriaNavigationIdCategoria");

                    b.HasOne("SistemaVenta.Entity.Guest", "IdGuestNavigation")
                        .WithMany("DetailBook")
                        .HasForeignKey("IdGuest")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DetailBook_Guest");

                    b.HasOne("SistemaVenta.Entity.Room", "IdRoomNavigation")
                        .WithMany("DetailBook")
                        .HasForeignKey("IdRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DetailBook_Room");

                    b.Navigation("IdBookNavigation");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdGuestNavigation");

                    b.Navigation("IdRoomNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.AreaFisica", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("AreaFisica")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_AreaFisica_idEstablishment__403A8C7D");

                    b.Navigation("IdEstablishmentNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Book", b =>
                {
                    b.HasOne("SistemaVenta.Entity.BookStatus", "IdBookStatusNavigation")
                        .WithMany("Book")
                        .HasForeignKey("IdBookStatus")
                        .HasConstraintName("FK_BookStatus_Book");

                    b.HasOne("SistemaVenta.Entity.Movimiento", "IdMovimientoNavigation")
                        .WithMany("Book")
                        .HasForeignKey("IdMovimiento")
                        .HasConstraintName("FK__Movimiento__idMovimi__3F466844");

                    b.HasOne("SistemaVenta.Entity.Origin", "IdOriginNavigation")
                        .WithMany("Book")
                        .HasForeignKey("IdOriginNavigationIdOrigin");

                    b.Navigation("IdBookStatusNavigation");

                    b.Navigation("IdMovimientoNavigation");

                    b.Navigation("IdOriginNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Caja", b =>
                {
                    b.HasOne("SistemaVenta.Entity.AreaFisica", "IdAreaNavigation")
                        .WithMany("CajaNavigation")
                        .HasForeignKey("IdAreaFisica")
                        .OnDelete(DeleteBehavior.Restrict)
                        .HasConstraintName("FK_AreaFisica_Caja__403A8C7D");

                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("Cajas")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Caja_idEstablishment__403A8C7D");

                    b.HasOne("SistemaVenta.Entity.Usuario", "IdUsuarioNavigation")
                        .WithMany("Caja")
                        .HasForeignKey("IdUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_Caja_Usuario__403A8C7D");

                    b.Navigation("IdAreaNavigation");

                    b.Navigation("IdEstablishmentNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.CategoriaProducto", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("CategoriaProductos")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEstablishmentNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.DetailRoom", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Room", "IdRoomNavigation")
                        .WithMany("DetailRoom")
                        .HasForeignKey("IdRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DetailRoom_Room");

                    b.HasOne("SistemaVenta.Entity.RoomStatus", "IdRoomStatusNavigation")
                        .WithMany("DetailRoom")
                        .HasForeignKey("IdRoomStatus")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DetailRoom_RoomStatus");

                    b.HasOne("SistemaVenta.Entity.Usuario", "IdUsuarioNavigation")
                        .WithMany("DetailRoom")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK_DetailRoom_user");

                    b.Navigation("IdRoomNavigation");

                    b.Navigation("IdRoomStatusNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.DetalleCaja", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Caja", "IdCajaNavigation")
                        .WithMany("DetalleCaja")
                        .HasForeignKey("IdCaja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DetalleCaja_Caja__403A8C7D");

                    b.HasOne("SistemaVenta.Entity.MedioPago", "IdMedioPagoNavigation")
                        .WithMany("DetalleCaja")
                        .HasForeignKey("IdMedioPago")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DetalleCaja_medioPago__403A8C7D");

                    b.HasOne("SistemaVenta.Entity.Movimiento", "IdMovimientoNavigation")
                        .WithMany("DetalleCaja")
                        .HasForeignKey("IdMovimiento")
                        .HasConstraintName("FK_DetalleCaja_Movimiento__403A8C7D");

                    b.Navigation("IdCajaNavigation");

                    b.Navigation("IdMedioPagoNavigation");

                    b.Navigation("IdMovimientoNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.DetalleMovimiento", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Movimiento", "IdMovimientoNavigation")
                        .WithMany("DetalleMovimiento")
                        .HasForeignKey("IdMovimiento")
                        .HasConstraintName("FK__DetalleVe__idVen__440B1D61");

                    b.HasOne("SistemaVenta.Entity.Producto", "IdProductoNavigation")
                        .WithMany("DetalleMovimiento")
                        .HasForeignKey("IdProducto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK_DetalleMovimiento_Producto");

                    b.Navigation("IdMovimientoNavigation");

                    b.Navigation("IdProductoNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Guest", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("Guests")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Guest_idEstablishment__403A8C7D");

                    b.Navigation("IdEstablishmentNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Holiday", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("Holidays")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Holiday_idEstablishment__403A8C7D");

                    b.Navigation("IdEstablishmentNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.ImagesEstablishment", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("ImagesEstablishment")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEstablishmentNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.ImagesRoom", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Room", "IdRoomNavigation")
                        .WithMany("ImagesRoom")
                        .HasForeignKey("IdRoom")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdRoomNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Level", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("Levels")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Level_idEstablishment__403A8C7D");

                    b.Navigation("IdEstablishmentNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Menu", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Menu", "IdMenuPadreNavigation")
                        .WithMany("InverseIdMenuPadreNavigation")
                        .HasForeignKey("IdMenuPadre")
                        .HasConstraintName("FK__Menu__idMenuPadr__24927208");

                    b.Navigation("IdMenuPadreNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Movimiento", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("Movimientos")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Movimiento_idEstablishment__403A8C7D");

                    b.HasOne("SistemaVenta.Entity.Proveedor", "IdProveedorNavigation")
                        .WithMany("Movimiento")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK__Movimiento__idProveedor__403A8C7D");

                    b.HasOne("SistemaVenta.Entity.TipoDocumentoMovimiento", "IdTipoDocumentoMovimientoNavigation")
                        .WithMany("Movimiento")
                        .HasForeignKey("IdTipoDocumentoMovimiento")
                        .HasConstraintName("FK__Movimiento__idTipoDoc__3F466844");

                    b.HasOne("SistemaVenta.Entity.Usuario", "IdUsuarioNavigation")
                        .WithMany("Movimiento")
                        .HasForeignKey("IdUsuario")
                        .HasConstraintName("FK__Movimiento__idUsuario__403A8C7D");

                    b.Navigation("IdEstablishmentNavigation");

                    b.Navigation("IdProveedorNavigation");

                    b.Navigation("IdTipoDocumentoMovimientoNavigation");

                    b.Navigation("IdUsuarioNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.NumeroCorrelativo", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("NumeroCorrelativos")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_NumeroCorrelativo_idEstablishment__403A8C7D");

                    b.Navigation("IdEstablishmentNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.ParamPlan", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Plan", "IdPlanNavigation")
                        .WithMany("ParamPlans")
                        .HasForeignKey("IdPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdPlanNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Producto", b =>
                {
                    b.HasOne("SistemaVenta.Entity.CategoriaProducto", "IdCategoriaProductoNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdCategoriaProducto")
                        .HasConstraintName("FK__Producto__idCate__36B12243");

                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaVenta.Entity.Proveedor", "IdProveedorNavigation")
                        .WithMany("Productos")
                        .HasForeignKey("IdProveedor")
                        .HasConstraintName("FK__Producto__idProv__36B12244");

                    b.Navigation("IdCategoriaProductoNavigation");

                    b.Navigation("IdEstablishmentNavigation");

                    b.Navigation("IdProveedorNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Proveedor", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("Proveedores")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("IdEstablishmentNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.RolMenu", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Menu", "IdMenuNavigation")
                        .WithMany("RolMenus")
                        .HasForeignKey("IdMenu")
                        .HasConstraintName("FK__RolMenu__idMenu__2C3393D0");

                    b.HasOne("SistemaVenta.Entity.Rol", "IdRolNavigation")
                        .WithMany("RolMenus")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__RolMenu__idRol__2B3F6F97");

                    b.Navigation("IdMenuNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Room", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Categoria", "IdCategoriaNavigation")
                        .WithMany("Rooms")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Room__idCate__36B12243");

                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("Rooms")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaVenta.Entity.Level", "IdLevelNavigation")
                        .WithMany("Rooms")
                        .HasForeignKey("IdLevel")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Room__idLev__36B12243");

                    b.HasOne("SistemaVenta.Entity.RoomStatus", "IdRoomStatusNavigation")
                        .WithMany("Rooms")
                        .HasForeignKey("IdRoomStatus")
                        .HasConstraintName("FK__Room__idRoomStatus__36B12243");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdEstablishmentNavigation");

                    b.Navigation("IdLevelNavigation");

                    b.Navigation("IdRoomStatusNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.RoomMapOrigin", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("RoomMapOrigins")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_room_map_idEstablishment__403A8C7D");

                    b.HasOne("SistemaVenta.Entity.Origin", "IdOriginNavigation")
                        .WithMany("RoomMapOrigin")
                        .HasForeignKey("IdOrigin");

                    b.HasOne("SistemaVenta.Entity.Room", "IdRoomNavigation")
                        .WithMany("RoomMapOrigin")
                        .HasForeignKey("IdRoom");

                    b.Navigation("IdEstablishmentNavigation");

                    b.Navigation("IdOriginNavigation");

                    b.Navigation("IdRoomNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.RoomPrice", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Categoria", "IdCategoriaNavigation")
                        .WithMany("RoomPrice")
                        .HasForeignKey("IdCategoria")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("RoomPrices")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_RoomPrice_idEstablishment__403A8C7D");

                    b.Navigation("IdCategoriaNavigation");

                    b.Navigation("IdEstablishmentNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Season", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Categoria", null)
                        .WithMany("SeasonPrice")
                        .HasForeignKey("CategoriaIdCategoria");

                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("Seasons")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Season_idEstablishment__403A8C7D");

                    b.Navigation("IdEstablishmentNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Service", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("Service")
                        .HasForeignKey("IdEstablishment");

                    b.HasOne("SistemaVenta.Entity.Room", "IdRoomNavigation")
                        .WithMany("Service")
                        .HasForeignKey("IdRoom");

                    b.Navigation("IdEstablishmentNavigation");

                    b.Navigation("IdRoomNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.ServiceInfoEstablishment", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("ServiceEstabNavigation")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaVenta.Entity.ServiceInfo", "IdServiceInfoNavigation")
                        .WithMany("ServiceInfoEstablNavigation")
                        .HasForeignKey("IdServiceInfo");

                    b.Navigation("IdEstablishmentNavigation");

                    b.Navigation("IdServiceInfoNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Subscription", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Establishment", "Establishment")
                        .WithMany("Subscriptions")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaVenta.Entity.Plan", "Plan")
                        .WithMany("Subscriptions")
                        .HasForeignKey("IdPlan")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Establishment");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Usuario", b =>
                {
                    b.HasOne("SistemaVenta.Entity.Establishment", "IdEstablishmentNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdEstablishment")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SistemaVenta.Entity.Rol", "IdRolNavigation")
                        .WithMany("Usuarios")
                        .HasForeignKey("IdRol")
                        .HasConstraintName("FK__Usuario__idRol__300424B4");

                    b.Navigation("IdEstablishmentNavigation");

                    b.Navigation("IdRolNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.AreaFisica", b =>
                {
                    b.Navigation("CajaNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Book", b =>
                {
                    b.Navigation("DetailBook");
                });

            modelBuilder.Entity("SistemaVenta.Entity.BookStatus", b =>
                {
                    b.Navigation("Book");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Caja", b =>
                {
                    b.Navigation("DetalleCaja");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Categoria", b =>
                {
                    b.Navigation("DetailBook");

                    b.Navigation("RoomPrice");

                    b.Navigation("Rooms");

                    b.Navigation("SeasonPrice");
                });

            modelBuilder.Entity("SistemaVenta.Entity.CategoriaProducto", b =>
                {
                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Establishment", b =>
                {
                    b.Navigation("AreaFisica");

                    b.Navigation("Cajas");

                    b.Navigation("CategoriaProductos");

                    b.Navigation("Guests");

                    b.Navigation("Holidays");

                    b.Navigation("ImagesEstablishment");

                    b.Navigation("Levels");

                    b.Navigation("Movimientos");

                    b.Navigation("NumeroCorrelativos");

                    b.Navigation("Productos");

                    b.Navigation("Proveedores");

                    b.Navigation("RoomMapOrigins");

                    b.Navigation("RoomPrices");

                    b.Navigation("Rooms");

                    b.Navigation("Seasons");

                    b.Navigation("Service");

                    b.Navigation("ServiceEstabNavigation");

                    b.Navigation("Subscriptions");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Guest", b =>
                {
                    b.Navigation("DetailBook");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Level", b =>
                {
                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("SistemaVenta.Entity.MedioPago", b =>
                {
                    b.Navigation("DetalleCaja");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Menu", b =>
                {
                    b.Navigation("InverseIdMenuPadreNavigation");

                    b.Navigation("RolMenus");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Movimiento", b =>
                {
                    b.Navigation("Book");

                    b.Navigation("DetalleCaja");

                    b.Navigation("DetalleMovimiento");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Origin", b =>
                {
                    b.Navigation("Book");

                    b.Navigation("RoomMapOrigin");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Plan", b =>
                {
                    b.Navigation("ParamPlans");

                    b.Navigation("Subscriptions");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Producto", b =>
                {
                    b.Navigation("DetalleMovimiento");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Proveedor", b =>
                {
                    b.Navigation("Movimiento");

                    b.Navigation("Productos");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Rol", b =>
                {
                    b.Navigation("RolMenus");

                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Room", b =>
                {
                    b.Navigation("DetailBook");

                    b.Navigation("DetailRoom");

                    b.Navigation("ImagesRoom");

                    b.Navigation("RoomMapOrigin");

                    b.Navigation("Service");
                });

            modelBuilder.Entity("SistemaVenta.Entity.RoomStatus", b =>
                {
                    b.Navigation("DetailRoom");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("SistemaVenta.Entity.ServiceInfo", b =>
                {
                    b.Navigation("ServiceInfoEstablNavigation");
                });

            modelBuilder.Entity("SistemaVenta.Entity.TipoDocumentoMovimiento", b =>
                {
                    b.Navigation("Movimiento");
                });

            modelBuilder.Entity("SistemaVenta.Entity.Usuario", b =>
                {
                    b.Navigation("Caja");

                    b.Navigation("DetailRoom");

                    b.Navigation("Movimiento");
                });
#pragma warning restore 612, 618
        }
    }
}
